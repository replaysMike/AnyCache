<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <Authors>Michael Brown</Authors>
    <Company>Refactor Software</Company>
    <Description>A .net caching library based on original LazyCache implementation</Description>
    <RepositoryUrl>https://github.com/replaysMike/AnyCache</RepositoryUrl>
    <PackageProjectUrl>https://github.com/replaysMike/AnyCache</PackageProjectUrl>
    <PackageTags>cache caching asp.net core dotnet-standard refactor software michael brown</PackageTags>
    <PackageReleaseNotes>A .net caching library based on original LazyCache implementation</PackageReleaseNotes>
    <Version>1.0.0</Version>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <CopyLocalLockFileAssemblies>true</CopyLocalLockFileAssemblies>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="ILRepack.MSBuild.Task.InternalizedRenameSupport" Version="2.0.19" PrivateAssets="true" />
    <PackageReference Include="Microsoft.Extensions.Caching.Memory" Version="3.1.3" PrivateAssets="true" />
  </ItemGroup>

  <Target Name="ILRepack" AfterTargets="Build" Condition="'$(Configuration)' == 'Release' AND '$(TargetFramework)' != ''">
    <PropertyGroup>
      <WorkingDirectory>$(OutputPath)</WorkingDirectory>
    </PropertyGroup>
    <ItemGroup>
      <!-- These are all the assemblies you want to embed -->
      <InputAssemblies Include="Microsoft.Extensions.Caching.Memory.dll" />
    </ItemGroup>
    <ItemGroup>
      <!-- Dot not internalize any types inside this assembly -->
      <!--<InternalizeExcludeAssemblies Include="AnyCache.dll" />-->
    </ItemGroup>
    <Message Text="MERGING: $(TargetFramework) @(InputAssemblies->'%(Filename)') into $(OutputAssembly)" Importance="High" />
    <ILRepack RenameInternalized="true" Internalize="true" Parallel="true" AllowDuplicateResources="false" DebugInfo="true" OutputType="$(OutputType)" MainAssembly="$(AssemblyName).dll" OutputAssembly="$(AssemblyName).dll" InputAssemblies="@(InputAssemblies)" InternalizeExcludeAssemblies="@(InternalizeExcludeAssemblies)" WorkingDirectory="$(WorkingDirectory)" />
  </Target>

</Project>
